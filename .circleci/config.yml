version: 2

references:
    working_directory: &working_directory ~/repo
    attach_workspace: &attach_workspace
    node_image: &node_image
        image: circleci/node:8
    ipfs_image: &ipfs_image
        image: ipfs/go-ipfs
    ganache_image: &ganache_image
        image: trufflesuite/ganache-cli
        command:
            - "-l"
            - "90000000"
            - "-m"
            - "candy maple cake sugar pudding cream honey rich smooth crumble sweet treat"

jobs:
    build:
        docker:
            - *node_image
        working_directory: *working_directory
        steps:
            - checkout
            - run:
                  name: "Yarn install"
                  command: "yarn install"
            - persist_to_workspace:
                  root: *working_directory
                  paths: .
    test-library:
        docker:
            - *node_image
            - *ipfs_image
            - *ganache_image
        working_directory: *working_directory
        steps:
            - attach_workspace:
                  at: *working_directory
            - run:
                  name: "Deploy test contract"
                  command: "yarn workspace @requestnetwork/request-network.js run testdeploy"
            - run:
                  name: "Test requestNetwork.js library"
                  command: "yarn workspace @requestnetwork/request-network.js run test"
    test-contract:
        docker:
            - *node_image
            - *ipfs_image
            - *ganache_image
        working_directory: *working_directory
        steps:
            - attach_workspace:
                  at: *working_directory
            - run:
                  name: "Install solium"
                  command: "sudo npm install -g solium@1.1.8"
            - run:
                  name: "Check contract linting"
                  command: "yarn workspace request-network-smart-contracts run lint"
            - run:
                  name: "Test requestNetwork contract"
                  command: "yarn workspace request-network-smart-contracts run test"
    build-docs-library:
        docker:
            - *node_image
        working_directory: *working_directory
        steps:
            - attach_workspace:
                  at: *working_directory
            - run:
                  name: "Install compodoc"
                  command: "sudo npm install -g @compodoc/compodoc"
            - run:
                  name: "Create library documentation"
                  command: "yarn workspace @requestnetwork/request-network.js run docs"
            - persist_to_workspace:
                  root: *working_directory
                  paths:
                      - packages/requestNetwork.js/docs
    build-docs-contract:
        docker:
            - *node_image
        working_directory: *working_directory
        steps:
            - attach_workspace:
                  at: *working_directory
            - run:
                  name: "Create contract documentation"
                  command: "yarn workspace request-network-smart-contracts run docs:build"
            - persist_to_workspace:
                  root: *working_directory
                  paths:
                      - packages/requestNetworkSmartContracts/docs
    deploy-docs:
        docker:
            - image: circleci/python:2.7-jessie
        working_directory: *working_directory
        steps:
            - attach_workspace:
                  at: *working_directory
            - run:
                  name: "Install awscli"
                  command: "sudo pip install awscli"
            - run:
                  name: Deploy library documentation to S3
                  command: "aws s3 sync packages/requestNetwork.js/docs s3://docs-js-lib.request.network --delete"
            - run:
                  name: Deploy contracts documentation to S3
                  command: "aws s3 sync packages/requestNetworkSmartContracts/docs s3://docs-smart-contracts.request.network --delete"

workflows:
    version: 2
    build-and-test:
        jobs:
            - build
            # Test
            - test-library:
                  requires:
                      - build
            - test-contract:
                  requires:
                      - build
            # Build documentation
            - build-docs-library:
                  requires:
                      - test-library
            - build-docs-contract:
                  requires:
                      - test-contract
            # Deploy documentation
            - deploy-docs:
                  filters:
                      branches:
                          only: master
                  requires:
                      - build-docs-library
                      - build-docs-contract
